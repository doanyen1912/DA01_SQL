1.
select * from sales_dataset_rfm_prj;
ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN ordernumber TYPE numeric USING (trim(ordernumber)::numeric);
ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN quantityordered TYPE int USING (trim(quantityordered)::int);
ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN priceeach TYPE numeric USING (trim(priceeach)::numeric);

ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN orderlinenumber TYPE int USING (trim(orderlinenumber)::int);

ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN sales TYPE numeric(18,2) USING (trim(sales)::numeric(18,2));

ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN orderdate TYPE timestamp with time zone 
USING (trim(orderdate):: timestamp with time zone);
	  

ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN status TYPE text; 
ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN productline TYPE varchar; 
ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN msrp TYPE int USING (trim(msrp)::int);
ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN customername TYPE varchar; 
ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN phone TYPE varchar; 
ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN addressline1 TYPE varchar; 
ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN addressline2 TYPE varchar; 
ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN city TYPE varchar; 
ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN state TYPE char(20); 
ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN postalcode TYPE char(20); 

ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN country TYPE char(20); 
ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN territory TYPE char(20);
ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN contactfullname TYPE char(50);
ALTER TABLE sales_dataset_rfm_prj
ALTER COLUMN dealsize TYPE char(20); 

2. 
select 
sum (case
	 when ORDERNUMBER is null 
	 then 1 else 0
end) as null_ordernumber, 
sum (case
	 when PRICEEACH is null 
	 then 1 else 0
end) as null_PRICEEACH,
sum (case
	 when ORDERLINENUMBER is null 
	 then 1 else 0
end) as null_ORDERLINENUMBER,
sum (case
	 when SALES is null 
	 then 1 else 0
end) as null_SALES,
sum (case
	 when ORDERDATE is null 
	 then 1 else 0
end) as null_ORDERDATE
from sales_dataset_rfm_prj;
-- cau nay e lam nhu the nay de dem so null o tung truong nhung ket qua lai ra 0 het ac sua giup e voi a -- 

3. 

select 
initcap(left (CONTACTFULLNAME,position ('-' in CONTACTFULLNAME) -1 )) as CONTACTFIRSTNAME,
initcap (substring (CONTACTFULLNAME 
		   from position ('-' in CONTACTFULLNAME) +1 for 
		 10 )) as CONTACTLASTNAME


from public.sales_dataset_rfm_prj
insert into CONTACTFIRSTNAME 
select ; 

alter table sales_dataset_rfm_prj 
add column CONTACTFIRSTNAME varchar (50); 
-- cau nay e thu dung insert into nhung bi bao loi e tra cx k co ham insert dc du lieu ca bang theo ham a -- 

4.  
select extract (month from orderdate ) as month_id,
(case when extract (month from orderdate ) = 1 or
  extract (month from orderdate ) = 2 or 
  extract (month from orderdate ) =3 then '1' 
 when extract (month from orderdate ) = 4 or 
 extract (month from orderdate ) =5 or
 extract (month from orderdate ) =6 then '2'
 when extract (month from orderdate ) = 7 or
  extract (month from orderdate ) = 8 or 
  extract (month from orderdate ) =9 then '3' 
 when extract (month from orderdate ) = 10 or 
 extract (month from orderdate ) =11 or
 extract (month from orderdate ) =12 then '4' 
 
end ) as qtr_id ,
extract (year from orderdate ) as year_id

from public.sales_dataset_rfm_prj 

5. 
with twt_min_max as (
select Q1 -1.5*IQR as min_value,Q3 +1.5*IQR as max_value
from (
select 
percentile_cont(0.25) within group(order by quantityordered ) as Q1,
percentile_cont(0.75) within group(order by quantityordered ) as Q3,
percentile_cont(0.75) within group(order by quantityordered ) - 
percentile_cont(0.25) within group(order by quantityordered ) as IQR
from public.sales_dataset_rfm_prj)), twt_outlier as (
select * from sales_dataset_rfm_prj
where quantityordered < (select min_value from twt_min_max ) 
or quantityordered > (select max_value from twt_min_max )) ;
update sales_dataset_rfm_prj
set quantityordered = (select avg (quantityordered)) 
in (select quantityordered from twt_outlier ) 

6.
ALTER TABLE sales_dataset_rfm_prj   
RENAME TO SALES_DATASET_RFM_PRJ_CLEAN;  
